{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "virtualMachineAdminUserName": {
      "defaultValue": "azadmin",
      "type": "string",
      "metadata": {
        "description": "Administrator Username for the local admin account"
      }
    },
    "virtualMachineAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator password for the local admin account"
      }
    },
    "VNETnewOrExisting": {
      "type": "string",
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ]
    },
    "VNETName": {
      "type": "string",
      "defaultValue": "SQLVNET",
      "metadata": {
        "description": "New or existing virtual network"
      }
    },
    "VNETPrefix": {
      "type": "string",
      "defaultValue": "10.50.0.0/16",
      "metadata": {
        "description": "Address space of the Virtual network"
      }
    },
    "SQLSubnetName": {
      "type": "string",
      "defaultValue": "sqlsubnet",
      "metadata": {
        "description": "Subnet name for SQL subnet defined in virtual network"
      }
    },
    "SQLSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.50.1.0/24",
      "metadata": {
        "description": "Subnet address space for SQL subnet defined in virtual network"
      }
    },
    "sqlAuthenticationLogin": {
      "type": "string",
      "defaultValue": "SQLNinja",
      "metadata": {
        "description": "Subnet address space for SQL subnet defined in virtual network"
      }
    },
    "sqlAuthenticationPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Subnet address space for SQL subnet defined in virtual network"
      }
    },
    "virtualMachineNamePrefix": {
      "defaultValue": "MyVM0",
      "type": "string",
      "maxLength": 15,
      "metadata": {
        "description": "Name of the virtual machine to be created"
      }
    },
    "virtualMachineCount": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Number of  virtual machines to be created"
      }
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_B1ms",
      "allowedValues": [
        "Standard_B1ms",
        "Standard_B2s",
        "Standard_DS1_v2",
        "Standard_DS2_v2"
      ],
      "metadata": {
        "description": "Virtual Machine Size"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "sql2019-ws2019",
      "metadata": {
        "description": "Operating System of the Server"
      },
      "allowedValues": [
        "sql2019-ws2019",
        "sql2017-ws2019",
        "SQL2017-WS2016",
        "sql2016sp2-ws2019",
        "SQL2016SP2-WS2016",
        "SQL2016SP2-WS2012R2",
        "SQL2016SP1-WS2016"
      ]
    },
    "imageSku": {
      "type": "string",
      "allowedValues": [
        "sqldev",
        "standard",
        "enterprise"

      ],
      "metadata": {
        "description": "The size of the SQL VM Created"
      },
      "defaultValue": "standard"
    },
    "availabilitySetName": {
      "defaultValue": "MyAvailabilitySet",
      "type": "string",
      "metadata": {
        "description": "Availability Set Name where the VM will be placed"
      }
    },
    "dnsPrefixForPublicIP": {
      "type": "string",
      "minLength": 1,
      "maxLength": 14,
      "defaultValue": "[uniqueString(resourceGroup().id)]",
      "metadata": {
        "description": "Globally unique DNS prefix for the Public IPs used to access the Virtual Machines"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "East US",
        "East US2",
        "Central US",
        "West US",
        "West US2",
        "North Europe",
        "West Europe",
        "UK South",
        "France Central",
        "East Asia",
        "South India",
        "West India",
        "Central India",
        "Australia Central",
        "Japan West"
      ],
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "privateIPAddressForLB": {
      "type": "string",
      "defaultValue": "10.50.1.6",
      "metadata": {
        "description": "Private IP address in the Address range of virtual network"
      }

    },
    "networkSecurityGroupName": {
      "type": "string",
      "defaultValue": "default-NSG"
    },
    "sqlAutopatchingDayOfWeek": {
      "type": "string"
    },
    "sqlAutopatchingStartHour": {
      "type": "string"
    },
    "sqlAutopatchingWindowDuration": {
      "type": "string"
    },
    "sqlStorageDisksConfigurationType": {
      "type": "string"
    },
    "sqlStorageWorkloadType": {
      "type": "string"
    },
   
    "rServicesEnabled": {
      "type": "string"
    },
    "sqlConnectivityType": {
      "type": "string"
    },
    "sqlPortNumber": {
      "type": "int"
    },
    "sqlStorageDisksCount": {
      "type": "Int"
    },
    "sqlStorageStartingDeviceId": {
      "type": "Int"
    }
  },
  "variables": {
    "subscriptionid": "[subscription().subscriptionId]",
    "diagnosticStorageAccountName": "[concat('diagst', uniqueString(resourceGroup().id))]",

    "availabilitySetPlatformFaultDomainCount": "2",
    "availabilitySetPlatformUpdateDomainCount": "5",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('VNETName'),  parameters('SQLSubnetName'))]",
    "loadBalancerName": "ilb",
    "publicIpAddressType": "Static",
    "publicIpAddressSku": "Standard"
  },
  "resources": [
    {
      "comments": "Default Network Security Group for template",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-08-01",
      "name": "[parameters('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-3389",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "3389",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "default-allow-59999",
            "properties": {
              "priority": 900,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "59999",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          },
          {
            "name": "default-allow-1433",
            "properties": {
              "priority": 800,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "1433",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-04-01",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[variables('loadBalancerName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[variables('publicIpAddressSku')]"
      },
      "dependsOn": [
        "[parameters('VNETName')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAddress": "[parameters('privateIPAddressForLB')]",
              "privateIPAllocationMethod": "Static"
            },
            "name": "LoadBalancerFrontend"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "idleTimeoutInMinutes": 15
            },
            "Name": "lbrule"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    },
    {
      "name": "[parameters('VNETName')]",
      "condition": "[equals(parameters('VNETnewOrExisting'),'new')]",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('location')]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
      ],
      "tags": {
        "displayName": "[parameters('VNETName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('VNETPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('SQLSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('SQLSubnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },

    {
      "name": "[variables('diagnosticStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[parameters('location')]",
      "apiVersion": "2016-01-01",
      "sku": {
        "name": "Standard_LRS"
      },
      "dependsOn": [],
      "tags": {
        "displayName": "diagnosticStorageAccount"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availabilitySetName')]",
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "properties": {
        "platformFaultDomainCount": "[variables('availabilitySetPlatformFaultDomainCount')]",
        "platformUpdateDomainCount": "[variables('availabilitySetPlatformUpdateDomainCount')]"
      },
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1))]",
      "apiVersion": "2017-03-30",
      "location": "[parameters('location')]",
      "copy": {
        "name": "VMcopy",
        "count": "[parameters('virtualMachineCount')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },

        "storageProfile": {

          "imageReference": {
            "publisher": "MicrosoftSQLServer",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('virtualMachineNamePrefix'),copyIndex(1),'-DISK')]",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            },
            "caching": "ReadWrite"
          }
        },
        "osProfile": {
          "computerName": "[concat(parameters('virtualMachineNamePrefix'),copyIndex(1))]",
          "adminUsername": "[parameters('virtualMachineAdminUserName')]",
          "windowsConfiguration": {
            "provisionVMAgent": true
          },
          "secrets": [],
          "adminPassword": "[parameters('virtualMachineAdminPassword')]"
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-NIC'))]"
            }
          ]
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('diagnosticStorageAccountName')), '2016-01-01').primaryEndpoints.blob]"
          }
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticStorageAccountName'))]",
        "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-NIC'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-NIC')]",
      "apiVersion": "2019-07-01",
      "location": "[parameters('location')]",
      "copy": {
        "name": "NICCopy",
        "count": "[parameters('virtualMachineCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-PIP'))]"
              },


              "subnet": {
                "id": "[variables('subnetRef')]"
              },

              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName')) , '/backendAddressPools/BackendPool1')]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": []
        },
        "enableIPForwarding": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-PIP'))]",
        "[resourceId('Microsoft.Network/loadBalancers/', variables('loadBalancerName'))]"

      ]
    },
    {
      "apiVersion": "2019-02-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-PIP')]",
      "location": "[parameters('location')]",
      "copy": {
        "name": "PIPCopy",
        "count": "[parameters('virtualMachineCount')]"
      },
      "tags": {
        "displayName": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1), '-PIP')]"
      },
      "sku": {
        "name": "[variables('publicIpAddressSku')]"
      },

      "properties": {
        "publicIPAllocationMethod": "[variables('publicIpAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('dnsPrefixForPublicIP'), copyIndex(1))]"
        }
      }
    },
    {
      "type": "Microsoft.SqlVirtualMachine/SqlVirtualMachines",
      "apiVersion": "2017-03-01-preview",
      "name": "[concat(parameters('virtualMachineNamePrefix'), copyIndex(1))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineNamePrefix'), copyIndex(1)))]"
      ],
      "properties": {
        
        "virtualMachineResourceId": "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineNamePrefix'), copyIndex(1)))]",
        "sqlManagement": "Full",
        "SqlServerLicenseType": "PAYG",
        "AutoPatchingSettings": {
          "Enable": true,
          "DayOfWeek": "[parameters('sqlAutopatchingDayOfWeek')]",
          "MaintenanceWindowStartingHour": "[parameters('sqlAutopatchingStartHour')]",
          "MaintenanceWindowDuration": "[parameters('sqlAutopatchingWindowDuration')]"
        },
        "KeyVaultCredentialSettings": {
          "Enable": false,
          "CredentialName": ""
        },
        
        "ServerConfigurationsManagementSettings": {
          "SQLConnectivityUpdateSettings": {
            "ConnectivityType": "[parameters('sqlConnectivityType')]",
            "Port": "[parameters('sqlPortNumber')]",
            "SQLAuthUpdateUserName": "[parameters('sqlAuthenticationLogin')]",
            "SQLAuthUpdatePassword": "[parameters('sqlAuthenticationPassword')]"
          },
          "AdditionalFeaturesServerConfigurations": {
            "IsRServicesEnabled": "[parameters('rServicesEnabled')]"
          }
        }

      },
      "copy": {
        "name": "sqlvmLoop",
        "count": "[parameters('virtualMachineCount')]"
      }
    }
   
  ],
  "outputs": {}
}